name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonarcloud_scan:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install SonarScanner
      - name: Install SonarScanner
        run: |
          wget -qO- https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip | bsdtar -xvf- -C /tmp
          export PATH=$PATH:/tmp/sonar-scanner-4.6.2.2472-linux/bin

      # SonarQube Scan
      - name: SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          /tmp/sonar-scanner-4.6.2.2472-linux/bin/sonar-scanner \
            -Dsonar.projectKey=frontend \
            -Dsonar.organization=my_org \
            -Dsonar.sources=./frontend \
            -Dsonar.host.url=http://54.167.73.42:9000 \
            -Dsonar.login=$SONAR_TOKEN

  docker_build_scan_push:
    needs: sonarcloud_scan
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Log in to DockerHub using the access token
      - name: Log in to DockerHub with Token
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build Docker image
      - name: Build Docker image
        run: |
          docker build -t frontend ./frontend

      # Log in to AWS ECR
      - name: Log in to AWS ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws ecr get-login-password --region $AWS_REGION | \
          docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY }}

      # Tag Docker image
      - name: Tag Docker image
        run: |
          IMAGE_URI=${{ secrets.ECR_REPOSITORY }}:latest
          docker tag frontend $IMAGE_URI

      # Trivy scan Docker image
      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@master
       
